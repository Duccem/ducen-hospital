model Doctor {
  id                    String                 @id @default(uuid())
  userId                String                 @unique 
  specialtyId           String                 @default(uuid())
  licenseMedicalNumber  String?                @unique
  score                 Float                  @default(0)
  experience            Int                    @default(1)
  educations            Json[]
  user                  User                   @relation(fields: [userId], references: [id])
  specialty             Specialty              @relation(fields: [specialtyId], references: [id])
  ratings               Rating[]
  schedule              Schedule?
  consultingRoomAddress ConsultingRoomAddress?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
}

model Specialty {
  id     String   @id @default(uuid())
  name   String   @unique
  doctor Doctor[]
}

model ConsultingRoomAddress {
  id              String @id @default(uuid())
  doctorId        String @unique
  doctor          Doctor @relation(fields: [doctorId], references: [id])
  city            String
  address         String
  roomCoordinates Json
}


model Schedule {
  id                    String @id @default(uuid())
  days                  Json[]
  appointmentDuration   Int
  maxAppointmentsPerDay Int
  doctorId              String @unique
  doctor                Doctor @relation(fields: [doctorId], references: [id])
}

model Rating {
  id        String   @id @default(uuid())
  doctorId  String   
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  patientId String   
  patient   User     @relation(fields: [patientId], references: [id])
  score     Float
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}