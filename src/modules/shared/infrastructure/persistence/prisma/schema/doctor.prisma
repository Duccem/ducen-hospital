model Doctor {
  id String @id @default(uuid())

  licenseMedicalNumber String? @unique
  score                Float   @default(0)
  experience           Int     @default(1)
  educations           Json[]
  
  schedule              Schedule?
  consultingRoomAddress ConsultingRoomAddress?

  userId      String    @unique
  specialtyId String    @unique

  user        User      @relation(fields: [userId], references: [id])
  specialty   Specialty @relation(fields: [specialtyId], references: [id])

  hospitals             Hospital[]             @relation("DoctorHospital")
  ratings               Rating[]
  diagnostics           Diagnostic[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Specialty {
  id     String   @id @default(uuid())
  name   String   @unique
  doctor Doctor[]
}

model ConsultingRoomAddress {
  id              String @id @default(uuid())

  city            String
  address         String
  roomCoordinates Json

  doctorId        String @unique
  doctor          Doctor @relation(fields: [doctorId], references: [id])
}

model Schedule {
  id                    String @id @default(uuid())

  days                  Json[]
  appointmentDuration   Int
  maxAppointmentsPerDay Int

  doctorId              String @unique
  doctor                Doctor @relation(fields: [doctorId], references: [id])
}

model Rating {
  id        String   @id @default(uuid())
  
  score     Float
  comment   String?

  doctorId  String
  patientId String
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  patient   Patient  @relation(fields: [patientId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
